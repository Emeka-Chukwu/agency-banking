// Code generated by MockGen. DO NOT EDIT.
// Source: agency-banking/internal/auths/usecases (interfaces: Authusecase)

// Package mockdb is a generated GoMock package.
package mockdb

import (
	domain "agency-banking/domain/auths"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthusecase is a mock of Authusecase interface.
type MockAuthusecase struct {
	ctrl     *gomock.Controller
	recorder *MockAuthusecaseMockRecorder
}

// MockAuthusecaseMockRecorder is the mock recorder for MockAuthusecase.
type MockAuthusecaseMockRecorder struct {
	mock *MockAuthusecase
}

// NewMockAuthusecase creates a new mock instance.
func NewMockAuthusecase(ctrl *gomock.Controller) *MockAuthusecase {
	mock := &MockAuthusecase{ctrl: ctrl}
	mock.recorder = &MockAuthusecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthusecase) EXPECT() *MockAuthusecaseMockRecorder {
	return m.recorder
}

// Login mocks base method.
func (m *MockAuthusecase) Login(arg0 domain.Login) (domain.LoginResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", arg0)
	ret0, _ := ret[0].(domain.LoginResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockAuthusecaseMockRecorder) Login(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockAuthusecase)(nil).Login), arg0)
}

// Register mocks base method.
func (m *MockAuthusecase) Register(arg0 domain.User) (domain.LoginResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", arg0)
	ret0, _ := ret[0].(domain.LoginResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register.
func (mr *MockAuthusecaseMockRecorder) Register(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockAuthusecase)(nil).Register), arg0)
}
